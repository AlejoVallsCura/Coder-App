{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React, { useEffect, useState } from \"react\";\nimport Card from \"../components/Card\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar GameScreen = function GameScreen() {\n  var _useState = useState(),\n    _useState2 = _slicedToArray(_useState, 2),\n    currentGuess = _useState2[0],\n    setCurrentGuess = _useState2[1];\n  useEffect(function () {\n    setCurrentGuess(Math.floor(Math.random() * (100 - 1) + 1));\n  }, []);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      children: \"La suposicion del oponente\"\n    }), _jsx(Text, {\n      children: currentGuess\n    }), _jsxs(Card, {\n      newStyles: styles.buttonContainer,\n      children: [_jsx(Button, {\n        title: \"Menor\"\n      }), _jsx(Button, {\n        title: \"Mayor\"\n      })]\n    })]\n  });\n};\nexport default GameScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 10,\n    alignItems: \"center\"\n  },\n  buttonContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    marginTop: 20,\n    width: 300\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","Card","GameScreen","currentGuess","setCurrentGuess","Math","floor","random","styles","container","buttonContainer","StyleSheet","create","flex","padding","alignItems","flexDirection","justifyContent","marginTop","width"],"sources":["C:/Users/Alejo/Desktop/App/MyFistApp/01-App-CoderHouse/MyGame/screens/GameScreen.js"],"sourcesContent":["import { Button, StyleSheet, Text, View } from \"react-native\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Card from \"../components/Card\";\r\n\r\nconst GameScreen = () => {\r\n  const [currentGuess, setCurrentGuess] = useState();\r\n\r\n  useEffect(() => {\r\n    setCurrentGuess(Math.floor(Math.random() * (100 - 1) + 1));\r\n  }, []);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text>La suposicion del oponente</Text>\r\n      <Text>{currentGuess}</Text>\r\n      <Card newStyles={styles.buttonContainer}>\r\n        <Button title=\"Menor\" />\r\n        <Button title=\"Mayor\" />\r\n      </Card>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default GameScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 10,\r\n    alignItems: \"center\",\r\n  },\r\n  buttonContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    marginTop: 20,\r\n    width: 300,\r\n  },\r\n});\r\n"],"mappings":";;;;;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,IAAI;AAA2B;AAAA;AAEtC,IAAMC,UAAU,GAAG,SAAbA,UAAU,GAAS;EACvB,gBAAwCF,QAAQ,EAAE;IAAA;IAA3CG,YAAY;IAAEC,eAAe;EAEpCL,SAAS,CAAC,YAAM;IACdK,eAAe,CAACC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,IAAI,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;EAC5D,CAAC,EAAE,EAAE,CAAC;EAEN,OACE,MAAC,IAAI;IAAC,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAA,WAC5B,KAAC,IAAI;MAAA;IAAA,EAAkC,EACvC,KAAC,IAAI;MAAA,UAAEN;IAAY,EAAQ,EAC3B,MAAC,IAAI;MAAC,SAAS,EAAEK,MAAM,CAACE,eAAgB;MAAA,WACtC,KAAC,MAAM;QAAC,KAAK,EAAC;MAAO,EAAG,EACxB,KAAC,MAAM;QAAC,KAAK,EAAC;MAAO,EAAG;IAAA,EACnB;EAAA,EACF;AAEX,CAAC;AAED,eAAeR,UAAU;AAEzB,IAAMM,MAAM,GAAGG,UAAU,CAACC,MAAM,CAAC;EAC/BH,SAAS,EAAE;IACTI,IAAI,EAAE,CAAC;IACPC,OAAO,EAAE,EAAE;IACXC,UAAU,EAAE;EACd,CAAC;EACDL,eAAe,EAAE;IACfM,aAAa,EAAE,KAAK;IACpBC,cAAc,EAAE,eAAe;IAC/BC,SAAS,EAAE,EAAE;IACbC,KAAK,EAAE;EACT;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module"}